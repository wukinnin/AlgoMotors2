package algomotors2;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author nimpad
 */

import javax.swing.*;
import java.io.*;

public class AlgoFrame extends javax.swing.JFrame {

    /**
     * Creates new form AlgoFrame
     */
    public AlgoFrame() {
        initComponents();
        int carNum = 6; // Assuming there are 6 car types
        rentedCarCustomers = new String[carNum];
        carAvailability = new CarAvailability(carNum);
        // Update rateNumField based on the initial selected car
        updateRateNumField();
    }

    private CarAvailability carAvailability;
    private String[] rentedCarCustomers;  // Array to store the customer name for each rented car

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modelRentLabel1 = new javax.swing.JLabel();
        carComboBox1 = new javax.swing.JComboBox<>();
        mainPanel = new javax.swing.JTabbedPane();
        viewCarPanel = new javax.swing.JPanel();
        viewNestedCarTab = new javax.swing.JTabbedPane();
        viewNestedViosPanel = new javax.swing.JPanel();
        viewNestedAvanzaPanel = new javax.swing.JPanel();
        viewNestedCorollaPanel = new javax.swing.JPanel();
        viewNestedInnovaPanel = new javax.swing.JPanel();
        viewNestedHiluxPanel = new javax.swing.JPanel();
        viewNestedFortunerPanel = new javax.swing.JPanel();
        rentACarPanel = new javax.swing.JPanel();
        nameRentLabel = new javax.swing.JLabel();
        nameRentField = new javax.swing.JTextField();
        modelRentLabel = new javax.swing.JLabel();
        carComboBox = new javax.swing.JComboBox<>();
        rentCarButton = new javax.swing.JButton();
        amountLabel = new javax.swing.JLabel();
        amountField = new javax.swing.JTextField();
        daysRentLabel = new javax.swing.JLabel();
        daysRentField = new javax.swing.JTextField();
        rateHeaderLabel = new javax.swing.JLabel();
        rateNumField = new javax.swing.JTextField();
        rentTotalField = new javax.swing.JTextField();
        changeNumField = new javax.swing.JTextField();
        rentTotalButton = new javax.swing.JButton();
        changeNumButton = new javax.swing.JButton();
        rentTotalLabel = new javax.swing.JLabel();
        changeNumLabel = new javax.swing.JLabel();
        clearRentButton = new javax.swing.JButton();
        returnACarPanel = new javax.swing.JPanel();
        returnModelLabel = new javax.swing.JLabel();
        returnCarCombo = new javax.swing.JComboBox<>();
        nameReturnLabel = new javax.swing.JLabel();
        returnNameField = new javax.swing.JTextField();
        returnButton = new javax.swing.JButton();
        titleHeader = new javax.swing.JLabel();

        modelRentLabel1.setText("Model");

        carComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vios", "Avanza", "Corolla", "Innova", "Hilux", "Fortuner" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Algo Motors");

        javax.swing.GroupLayout viewNestedViosPanelLayout = new javax.swing.GroupLayout(viewNestedViosPanel);
        viewNestedViosPanel.setLayout(viewNestedViosPanelLayout);
        viewNestedViosPanelLayout.setHorizontalGroup(
            viewNestedViosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedViosPanelLayout.setVerticalGroup(
            viewNestedViosPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Vios", viewNestedViosPanel);

        javax.swing.GroupLayout viewNestedAvanzaPanelLayout = new javax.swing.GroupLayout(viewNestedAvanzaPanel);
        viewNestedAvanzaPanel.setLayout(viewNestedAvanzaPanelLayout);
        viewNestedAvanzaPanelLayout.setHorizontalGroup(
            viewNestedAvanzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedAvanzaPanelLayout.setVerticalGroup(
            viewNestedAvanzaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Avanza", viewNestedAvanzaPanel);

        javax.swing.GroupLayout viewNestedCorollaPanelLayout = new javax.swing.GroupLayout(viewNestedCorollaPanel);
        viewNestedCorollaPanel.setLayout(viewNestedCorollaPanelLayout);
        viewNestedCorollaPanelLayout.setHorizontalGroup(
            viewNestedCorollaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedCorollaPanelLayout.setVerticalGroup(
            viewNestedCorollaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Corolla", viewNestedCorollaPanel);

        javax.swing.GroupLayout viewNestedInnovaPanelLayout = new javax.swing.GroupLayout(viewNestedInnovaPanel);
        viewNestedInnovaPanel.setLayout(viewNestedInnovaPanelLayout);
        viewNestedInnovaPanelLayout.setHorizontalGroup(
            viewNestedInnovaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedInnovaPanelLayout.setVerticalGroup(
            viewNestedInnovaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Innova", viewNestedInnovaPanel);

        javax.swing.GroupLayout viewNestedHiluxPanelLayout = new javax.swing.GroupLayout(viewNestedHiluxPanel);
        viewNestedHiluxPanel.setLayout(viewNestedHiluxPanelLayout);
        viewNestedHiluxPanelLayout.setHorizontalGroup(
            viewNestedHiluxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedHiluxPanelLayout.setVerticalGroup(
            viewNestedHiluxPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Hilux", viewNestedHiluxPanel);

        javax.swing.GroupLayout viewNestedFortunerPanelLayout = new javax.swing.GroupLayout(viewNestedFortunerPanel);
        viewNestedFortunerPanel.setLayout(viewNestedFortunerPanelLayout);
        viewNestedFortunerPanelLayout.setHorizontalGroup(
            viewNestedFortunerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 520, Short.MAX_VALUE)
        );
        viewNestedFortunerPanelLayout.setVerticalGroup(
            viewNestedFortunerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 357, Short.MAX_VALUE)
        );

        viewNestedCarTab.addTab("Fortuner", viewNestedFortunerPanel);

        javax.swing.GroupLayout viewCarPanelLayout = new javax.swing.GroupLayout(viewCarPanel);
        viewCarPanel.setLayout(viewCarPanelLayout);
        viewCarPanelLayout.setHorizontalGroup(
            viewCarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewCarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewNestedCarTab)
                .addContainerGap())
        );
        viewCarPanelLayout.setVerticalGroup(
            viewCarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, viewCarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(viewNestedCarTab)
                .addContainerGap())
        );

        mainPanel.addTab("View Cars", viewCarPanel);

        nameRentLabel.setText("Name");

        nameRentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameRentFieldActionPerformed(evt);
            }
        });

        modelRentLabel.setText("Model");

        carComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vios", "Avanza", "Corolla", "Innova", "Hilux", "Fortuner" }));
        carComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                carComboBoxActionPerformed(evt);
            }
        });

        rentCarButton.setText("Rent Car");
        rentCarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentCarButtonActionPerformed(evt);
            }
        });

        amountLabel.setText("Amount");

        amountField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountFieldActionPerformed(evt);
            }
        });

        daysRentLabel.setText("Day/s to Rent");

        daysRentField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daysRentFieldActionPerformed(evt);
            }
        });

        rateHeaderLabel.setText("Rate per day");

        rateNumField.setEditable(false);

        rentTotalField.setEditable(false);

        changeNumField.setEditable(false);

        rentTotalButton.setText("Get Rent");
        rentTotalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rentTotalButtonActionPerformed(evt);
            }
        });

        changeNumButton.setText("Get Change");
        changeNumButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeNumButtonActionPerformed(evt);
            }
        });

        rentTotalLabel.setText("Rent Total");

        changeNumLabel.setText("Change Tendered");

        clearRentButton.setText("Clear All");
        clearRentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearRentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rentACarPanelLayout = new javax.swing.GroupLayout(rentACarPanel);
        rentACarPanel.setLayout(rentACarPanelLayout);
        rentACarPanelLayout.setHorizontalGroup(
            rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rentACarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameRentLabel)
                    .addComponent(modelRentLabel)
                    .addComponent(daysRentLabel)
                    .addComponent(amountLabel)
                    .addComponent(rentTotalLabel)
                    .addComponent(changeNumLabel))
                .addGap(59, 59, 59)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rentACarPanelLayout.createSequentialGroup()
                        .addComponent(rentTotalField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(nameRentField)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, rentACarPanelLayout.createSequentialGroup()
                        .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(rentACarPanelLayout.createSequentialGroup()
                                .addComponent(carComboBox, 0, 174, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(rateHeaderLabel))
                            .addGroup(rentACarPanelLayout.createSequentialGroup()
                                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(daysRentField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(changeNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(changeNumButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                                    .addComponent(rentTotalButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rateNumField, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(rentACarPanelLayout.createSequentialGroup()
                .addGap(90, 90, 90)
                .addComponent(rentCarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(75, 75, 75)
                .addComponent(clearRentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        rentACarPanelLayout.setVerticalGroup(
            rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rentACarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameRentLabel)
                    .addComponent(nameRentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(modelRentLabel)
                    .addComponent(carComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rateHeaderLabel)
                    .addComponent(rateNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(daysRentLabel)
                    .addComponent(daysRentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rentTotalButton))
                .addGap(18, 18, 18)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentTotalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rentTotalLabel))
                .addGap(32, 32, 32)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountLabel)
                    .addComponent(amountField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeNumButton))
                .addGap(18, 18, 18)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(changeNumLabel)
                    .addComponent(changeNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(rentACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rentCarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clearRentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        mainPanel.addTab("Rent A Car", rentACarPanel);

        returnModelLabel.setText("Model");

        returnCarCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vios", "Avanza", "Corolla", "Innova", "Hilux", "Fortuner" }));

        nameReturnLabel.setText("Name");

        returnButton.setText("Return Car");
        returnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout returnACarPanelLayout = new javax.swing.GroupLayout(returnACarPanel);
        returnACarPanel.setLayout(returnACarPanelLayout);
        returnACarPanelLayout.setHorizontalGroup(
            returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnACarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(returnACarPanelLayout.createSequentialGroup()
                        .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(returnACarPanelLayout.createSequentialGroup()
                        .addGroup(returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(returnModelLabel)
                            .addComponent(nameReturnLabel))
                        .addGap(82, 82, 82)
                        .addGroup(returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(returnACarPanelLayout.createSequentialGroup()
                                .addComponent(returnCarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 309, Short.MAX_VALUE))
                            .addComponent(returnNameField))))
                .addContainerGap())
        );
        returnACarPanelLayout.setVerticalGroup(
            returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(returnACarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameReturnLabel)
                    .addComponent(returnNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(returnACarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(returnModelLabel)
                    .addComponent(returnCarCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(returnButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(275, Short.MAX_VALUE))
        );

        mainPanel.addTab("Return A Car", returnACarPanel);

        titleHeader.setText("Algo Motors System");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(titleHeader)
                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleHeader)
                .addGap(18, 18, 18)
                .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void returnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnButtonActionPerformed
        try {
            // Check if nameReturnField is not blank
            if (returnNameField.getText().trim().isEmpty()) {
                throw new InvalidReturnException("Name field cannot be blank.");
            }

            returnCar();
        } catch (InvalidReturnException e) {
            // Handle the exception, e.g., display an error message
            JOptionPane.showMessageDialog(this, e.getMessage(), "Invalid Return", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_returnButtonActionPerformed

    private void changeNumButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeNumButtonActionPerformed
        calculateChange();
    }//GEN-LAST:event_changeNumButtonActionPerformed

    private void rentTotalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentTotalButtonActionPerformed
        calculateRentTotal();
    }//GEN-LAST:event_rentTotalButtonActionPerformed

    private void daysRentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_daysRentFieldActionPerformed
        calculateRentTotal();
    }//GEN-LAST:event_daysRentFieldActionPerformed

    private void amountFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountFieldActionPerformed
        calculateChange();
    }//GEN-LAST:event_amountFieldActionPerformed

    private void rentCarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rentCarButtonActionPerformed
        try {
            // Check if nameRentField is not blank
            if (nameRentField.getText().trim().isEmpty()) {
                throw new InvalidRentException("Name field cannot be blank.");
            }

            // Check if daysRentField is blank, 0, or not an integer
            try {
                int days = Integer.parseInt(daysRentField.getText());
                if (days <= 0) {
                    throw new InvalidRentException("Number of days must be greater than 0.");
                }
            } catch (NumberFormatException e) {
                throw new InvalidRentException("Invalid input for days. Please enter a valid number.");
            }

            // Check if changeNumField is blank or not an integer
            try {
                int change = Integer.parseInt(changeNumField.getText());
            } catch (NumberFormatException e) {
                throw new InvalidRentException("Invalid input for change. Please enter a valid number.");
            }

            rentCar();
        } catch (InvalidRentException e) {
            // Handle the exception, e.g., display an error message
            JOptionPane.showMessageDialog(this, e.getMessage(), "Invalid Rent", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_rentCarButtonActionPerformed

    private void carComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_carComboBoxActionPerformed
        updateRateNumField();
    }//GEN-LAST:event_carComboBoxActionPerformed

    private void nameRentFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameRentFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameRentFieldActionPerformed

    private void clearRentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearRentButtonActionPerformed
            clearRentFields();
    }//GEN-LAST:event_clearRentButtonActionPerformed

    private void clearRentFields() {
    nameRentField.setText("");
    daysRentField.setText("");
    amountField.setText("");
    rentTotalField.setText("");
    changeNumField.setText("");
    }

    
    private void calculateRentTotal() {
    try {
        int days = Integer.parseInt(daysRentField.getText());
        if (days > 0) {
            int ratePerDay = 0;

            // Set rate based on the selected car
            String selectedCar = (String) carComboBox.getSelectedItem();
            switch (selectedCar) {
                case "Vios":
                    ratePerDay = 2000;
                    break;
                case "Avanza":
                    ratePerDay = 4000;
                    break;
                case "Corolla":
                    ratePerDay = 5000;
                    break;
                case "Innova":
                    ratePerDay = 7000;
                    break;
                case "Hilux":
                    ratePerDay = 9000;
                    break;
                case "Fortuner":
                    ratePerDay = 10000;
                    break;
            }

            int totalRent = days * ratePerDay;
            rentTotalField.setText(Integer.toString(totalRent));
            rateNumField.setText(Integer.toString(ratePerDay));
        } else {
            rentTotalField.setText("Invalid number of days");
        }
    } catch (NumberFormatException e) {
        rentTotalField.setText("Invalid format");
    }
    }
    
    private void calculateChange() {
        try {
        int amountPaid = Integer.parseInt(amountField.getText());
        int totalRent = Integer.parseInt(rentTotalField.getText());

        if (amountPaid >= totalRent) {
            int change = amountPaid - totalRent;
            changeNumField.setText(Integer.toString(change));
        } else {
            changeNumField.setText("Insufficient amount");
        }
    } catch (NumberFormatException e) {
        changeNumField.setText("Invalid format");
    }
    }
      
    private void rentCar() throws InvalidRentException {
        String name = nameRentField.getText();
        String selectedCar = (String) carComboBox.getSelectedItem();
        int days = Integer.parseInt(daysRentField.getText());
        int totalRent = Integer.parseInt(rentTotalField.getText());
        int amountPaid = Integer.parseInt(amountField.getText());

        // Check if the selected car is available
        int carIndex = getCarIndex(selectedCar);
        if (carIndex != -1) {
            // Update car availability
            carAvailability.rentCar(carIndex, name);
            // Record the customer name for the rented car
            rentedCarCustomers[carIndex] = name;

            // Display successful rent popup
            JOptionPane.showMessageDialog(this, "Rent successful!\nName: " + name + "\nCar: " + selectedCar
                    + "\nDays: " + days + "\nTotal Rent: " + totalRent + "\nAmount Paid: " + amountPaid
                    + "\nChange: " + changeNumField.getText(), "Rent Successful", JOptionPane.INFORMATION_MESSAGE);

            // Write user inputs to a .txt file
            writeToFile(name, selectedCar, days, totalRent, amountPaid);
        } else {
            // Display a message if the selected car is not available
            throw new InvalidRentException("Sorry, the selected car is not available.");
        }
    }   
    
    
    private int getCarIndex(String selectedCar) {
        switch (selectedCar) {
            case "Vios":
                return 0;
            case "Avanza":
                return 1;
            case "Corolla":
                return 2;
            case "Innova":
                return 3;
            case "Hilux":
                return 4;
            case "Fortuner":
                return 5;
            default:
                return -1;
        }
    }

    private void writeToFile(String name, String car, int days, int totalRent, int amountPaid) {
        try {
            File outputFile = new File(name+ "_output.txt");
            BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile, true));

            // Append user inputs to the file
            writer.write("Name: " + name + "\n");
            writer.write("Car: " + car + "\n");
            writer.write("Days: " + days + "\n");
            writer.write("Total Rent: " + totalRent + "\n");
            writer.write("Amount Paid: " + amountPaid + "\n\n");

            writer.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
    
    private void updateRateNumField() {
    String selectedCar = (String) carComboBox.getSelectedItem();
    int ratePerDay = 0;

    // Set rate based on the selected car
    switch (selectedCar) {
        case "Vios":
            ratePerDay = 2000;
            break;
        case "Avanza":
            ratePerDay = 4000;
            break;
        case "Corolla":
            ratePerDay = 5000;
            break;
        case "Innova":
            ratePerDay = 7000;
            break;
        case "Hilux":
            ratePerDay = 9000;
            break;
        case "Fortuner":
            ratePerDay = 10000;
            break;
    }

    // Update rateNumField
    rateNumField.setText(Integer.toString(ratePerDay));
}
    
    private void returnCar() throws InvalidReturnException {
    String name = returnNameField.getText();
    String selectedCar = (String) returnCarCombo.getSelectedItem();
    int carIndex = getCarIndex(selectedCar);

    // Check if the selected car was rented and the customer's name and car model match
    if (carIndex != -1) {
        // Update car availability
        carAvailability.returnCar(carIndex, name, selectedCar);
        // Clear the customer name for the returned car (no need to check again here)

        // Display successful return popup
        JOptionPane.showMessageDialog(this, "Return successful!\nName: " + name + "\nCar: " + selectedCar, "Return Successful", JOptionPane.INFORMATION_MESSAGE);

        // Write return transaction to a file
        writeReturnTransactionToFile(name, selectedCar);
    } else {
        // Display a message if the car cannot be returned
        throw new InvalidReturnException("Sorry, the car cannot be returned.");
    }
}

    private void writeReturnTransactionToFile(String name, String car) {
    try {
        File returnFile = new File(name + "_return.txt");
        BufferedWriter writer = new BufferedWriter(new FileWriter(returnFile, true));

        // Append return transaction details to the file
        writer.write("Name: " + name + "\n");
        writer.write("Car: " + car + "\n\n");

        writer.close();
    } catch (IOException e) {
        e.printStackTrace();
    }
}

  
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) 
    {
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AlgoFrame().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField amountField;
    public javax.swing.JLabel amountLabel;
    public javax.swing.JComboBox<String> carComboBox;
    public javax.swing.JComboBox<String> carComboBox1;
    public javax.swing.JButton changeNumButton;
    public javax.swing.JTextField changeNumField;
    public javax.swing.JLabel changeNumLabel;
    public javax.swing.JButton clearRentButton;
    public javax.swing.JTextField daysRentField;
    public javax.swing.JLabel daysRentLabel;
    public javax.swing.JTabbedPane mainPanel;
    public javax.swing.JLabel modelRentLabel;
    public javax.swing.JLabel modelRentLabel1;
    public javax.swing.JTextField nameRentField;
    public javax.swing.JLabel nameRentLabel;
    public javax.swing.JLabel nameReturnLabel;
    public javax.swing.JLabel rateHeaderLabel;
    public javax.swing.JTextField rateNumField;
    public javax.swing.JPanel rentACarPanel;
    public javax.swing.JButton rentCarButton;
    public javax.swing.JButton rentTotalButton;
    public javax.swing.JTextField rentTotalField;
    public javax.swing.JLabel rentTotalLabel;
    public javax.swing.JPanel returnACarPanel;
    public javax.swing.JButton returnButton;
    public javax.swing.JComboBox<String> returnCarCombo;
    public javax.swing.JLabel returnModelLabel;
    public javax.swing.JTextField returnNameField;
    public javax.swing.JLabel titleHeader;
    private javax.swing.JPanel viewCarPanel;
    public javax.swing.JPanel viewNestedAvanzaPanel;
    public javax.swing.JTabbedPane viewNestedCarTab;
    public javax.swing.JPanel viewNestedCorollaPanel;
    public javax.swing.JPanel viewNestedFortunerPanel;
    public javax.swing.JPanel viewNestedHiluxPanel;
    public javax.swing.JPanel viewNestedInnovaPanel;
    public javax.swing.JPanel viewNestedViosPanel;
    // End of variables declaration//GEN-END:variables
}
